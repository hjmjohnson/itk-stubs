import itk.itkVariableLengthVectorPython
from itk.support import itkHelpers as itkHelpers
from typing import Any

class _SwigNonDynamicMeta(type):
    __setattr__: Any = ...

def itkSignedDanielssonDistanceMapImageFilterIF2IF2_New(): ...

class itkSignedDanielssonDistanceMapImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    thisown: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    __New_orig__: Any = ...
    Clone: Any = ...
    SetSquaredDistance: Any = ...
    GetSquaredDistance: Any = ...
    SquaredDistanceOn: Any = ...
    SquaredDistanceOff: Any = ...
    SetUseImageSpacing: Any = ...
    GetUseImageSpacing: Any = ...
    UseImageSpacingOn: Any = ...
    UseImageSpacingOff: Any = ...
    SetInsideIsPositive: Any = ...
    GetInsideIsPositive: Any = ...
    InsideIsPositiveOn: Any = ...
    InsideIsPositiveOff: Any = ...
    GetVoronoiMap: Any = ...
    GetDistanceMap: Any = ...
    GetVectorDistanceMap: Any = ...
    IntConvertibleToInputCheck: Any = ...
    InputHasNumericTraitsCheck: Any = ...
    OutputImagePixelTypeIsFloatingPointCheck: Any = ...
    __swig_destroy__: Any = ...
    cast: Any = ...
    def New(*args: Any, **kargs: Any): ...
    New: Any = ...

itkSignedDanielssonDistanceMapImageFilterIF2IF2___New_orig__: Any
itkSignedDanielssonDistanceMapImageFilterIF2IF2_cast: Any

def itkSignedDanielssonDistanceMapImageFilterIF3IF3_New(): ...

class itkSignedDanielssonDistanceMapImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    thisown: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    __New_orig__: Any = ...
    Clone: Any = ...
    SetSquaredDistance: Any = ...
    GetSquaredDistance: Any = ...
    SquaredDistanceOn: Any = ...
    SquaredDistanceOff: Any = ...
    SetUseImageSpacing: Any = ...
    GetUseImageSpacing: Any = ...
    UseImageSpacingOn: Any = ...
    UseImageSpacingOff: Any = ...
    SetInsideIsPositive: Any = ...
    GetInsideIsPositive: Any = ...
    InsideIsPositiveOn: Any = ...
    InsideIsPositiveOff: Any = ...
    GetVoronoiMap: Any = ...
    GetDistanceMap: Any = ...
    GetVectorDistanceMap: Any = ...
    IntConvertibleToInputCheck: Any = ...
    InputHasNumericTraitsCheck: Any = ...
    OutputImagePixelTypeIsFloatingPointCheck: Any = ...
    __swig_destroy__: Any = ...
    cast: Any = ...
    def New(*args: Any, **kargs: Any): ...
    New: Any = ...

itkSignedDanielssonDistanceMapImageFilterIF3IF3___New_orig__: Any
itkSignedDanielssonDistanceMapImageFilterIF3IF3_cast: Any

def itkSignedDanielssonDistanceMapImageFilterISS2IF2_New(): ...

class itkSignedDanielssonDistanceMapImageFilterISS2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2IF2):
    thisown: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    __New_orig__: Any = ...
    Clone: Any = ...
    SetSquaredDistance: Any = ...
    GetSquaredDistance: Any = ...
    SquaredDistanceOn: Any = ...
    SquaredDistanceOff: Any = ...
    SetUseImageSpacing: Any = ...
    GetUseImageSpacing: Any = ...
    UseImageSpacingOn: Any = ...
    UseImageSpacingOff: Any = ...
    SetInsideIsPositive: Any = ...
    GetInsideIsPositive: Any = ...
    InsideIsPositiveOn: Any = ...
    InsideIsPositiveOff: Any = ...
    GetVoronoiMap: Any = ...
    GetDistanceMap: Any = ...
    GetVectorDistanceMap: Any = ...
    IntConvertibleToInputCheck: Any = ...
    InputHasNumericTraitsCheck: Any = ...
    OutputImagePixelTypeIsFloatingPointCheck: Any = ...
    __swig_destroy__: Any = ...
    cast: Any = ...
    def New(*args: Any, **kargs: Any): ...
    New: Any = ...

itkSignedDanielssonDistanceMapImageFilterISS2IF2___New_orig__: Any
itkSignedDanielssonDistanceMapImageFilterISS2IF2_cast: Any

def itkSignedDanielssonDistanceMapImageFilterISS3IF3_New(): ...

class itkSignedDanielssonDistanceMapImageFilterISS3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3IF3):
    thisown: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    __New_orig__: Any = ...
    Clone: Any = ...
    SetSquaredDistance: Any = ...
    GetSquaredDistance: Any = ...
    SquaredDistanceOn: Any = ...
    SquaredDistanceOff: Any = ...
    SetUseImageSpacing: Any = ...
    GetUseImageSpacing: Any = ...
    UseImageSpacingOn: Any = ...
    UseImageSpacingOff: Any = ...
    SetInsideIsPositive: Any = ...
    GetInsideIsPositive: Any = ...
    InsideIsPositiveOn: Any = ...
    InsideIsPositiveOff: Any = ...
    GetVoronoiMap: Any = ...
    GetDistanceMap: Any = ...
    GetVectorDistanceMap: Any = ...
    IntConvertibleToInputCheck: Any = ...
    InputHasNumericTraitsCheck: Any = ...
    OutputImagePixelTypeIsFloatingPointCheck: Any = ...
    __swig_destroy__: Any = ...
    cast: Any = ...
    def New(*args: Any, **kargs: Any): ...
    New: Any = ...

itkSignedDanielssonDistanceMapImageFilterISS3IF3___New_orig__: Any
itkSignedDanielssonDistanceMapImageFilterISS3IF3_cast: Any

def itkSignedDanielssonDistanceMapImageFilterIUC2IF2_New(): ...

class itkSignedDanielssonDistanceMapImageFilterIUC2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2):
    thisown: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    __New_orig__: Any = ...
    Clone: Any = ...
    SetSquaredDistance: Any = ...
    GetSquaredDistance: Any = ...
    SquaredDistanceOn: Any = ...
    SquaredDistanceOff: Any = ...
    SetUseImageSpacing: Any = ...
    GetUseImageSpacing: Any = ...
    UseImageSpacingOn: Any = ...
    UseImageSpacingOff: Any = ...
    SetInsideIsPositive: Any = ...
    GetInsideIsPositive: Any = ...
    InsideIsPositiveOn: Any = ...
    InsideIsPositiveOff: Any = ...
    GetVoronoiMap: Any = ...
    GetDistanceMap: Any = ...
    GetVectorDistanceMap: Any = ...
    IntConvertibleToInputCheck: Any = ...
    InputHasNumericTraitsCheck: Any = ...
    OutputImagePixelTypeIsFloatingPointCheck: Any = ...
    __swig_destroy__: Any = ...
    cast: Any = ...
    def New(*args: Any, **kargs: Any): ...
    New: Any = ...

itkSignedDanielssonDistanceMapImageFilterIUC2IF2___New_orig__: Any
itkSignedDanielssonDistanceMapImageFilterIUC2IF2_cast: Any

def itkSignedDanielssonDistanceMapImageFilterIUC3IF3_New(): ...

class itkSignedDanielssonDistanceMapImageFilterIUC3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3):
    thisown: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    __New_orig__: Any = ...
    Clone: Any = ...
    SetSquaredDistance: Any = ...
    GetSquaredDistance: Any = ...
    SquaredDistanceOn: Any = ...
    SquaredDistanceOff: Any = ...
    SetUseImageSpacing: Any = ...
    GetUseImageSpacing: Any = ...
    UseImageSpacingOn: Any = ...
    UseImageSpacingOff: Any = ...
    SetInsideIsPositive: Any = ...
    GetInsideIsPositive: Any = ...
    InsideIsPositiveOn: Any = ...
    InsideIsPositiveOff: Any = ...
    GetVoronoiMap: Any = ...
    GetDistanceMap: Any = ...
    GetVectorDistanceMap: Any = ...
    IntConvertibleToInputCheck: Any = ...
    InputHasNumericTraitsCheck: Any = ...
    OutputImagePixelTypeIsFloatingPointCheck: Any = ...
    __swig_destroy__: Any = ...
    cast: Any = ...
    def New(*args: Any, **kargs: Any): ...
    New: Any = ...

itkSignedDanielssonDistanceMapImageFilterIUC3IF3___New_orig__: Any
itkSignedDanielssonDistanceMapImageFilterIUC3IF3_cast: Any

def signed_danielsson_distance_map_image_filter(*args: Any, **kwargs: Any): ...
def signed_danielsson_distance_map_image_filter_init_docstring() -> None: ...
