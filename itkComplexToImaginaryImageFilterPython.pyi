import itk.itkInPlaceImageFilterBPython
from itk.support import itkHelpers as itkHelpers
from typing import Any

class _SwigNonDynamicMeta(type):
    __setattr__: Any = ...

def itkComplexToImaginaryImageFilterICF2IF2_New(): ...

class itkComplexToImaginaryImageFilterICF2IF2(itk.itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF2IF2):
    thisown: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    __New_orig__: Any = ...
    Clone: Any = ...
    InputConvertibleToOutputCheck: Any = ...
    __swig_destroy__: Any = ...
    cast: Any = ...
    def New(*args: Any, **kargs: Any): ...
    New: Any = ...

itkComplexToImaginaryImageFilterICF2IF2___New_orig__: Any
itkComplexToImaginaryImageFilterICF2IF2_cast: Any

def itkComplexToImaginaryImageFilterICF3IF3_New(): ...

class itkComplexToImaginaryImageFilterICF3IF3(itk.itkUnaryGeneratorImageFilterPython.itkUnaryGeneratorImageFilterICF3IF3):
    thisown: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    __New_orig__: Any = ...
    Clone: Any = ...
    InputConvertibleToOutputCheck: Any = ...
    __swig_destroy__: Any = ...
    cast: Any = ...
    def New(*args: Any, **kargs: Any): ...
    New: Any = ...

itkComplexToImaginaryImageFilterICF3IF3___New_orig__: Any
itkComplexToImaginaryImageFilterICF3IF3_cast: Any

def complex_to_imaginary_image_filter(*args: Any, **kwargs: Any): ...
def complex_to_imaginary_image_filter_init_docstring() -> None: ...
