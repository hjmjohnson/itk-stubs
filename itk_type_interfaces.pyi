# Interface file for providing minimal interface to
# common C++ types in a way that is primarily concerned
# with improving IDE interactions.  The interfaces defined
# in this file may be more general than the strict types
# used in order to provide more generic re-usable
# constructs.
#
# The Proxie's are not implemented, but act as
# good 'stunt-doubles' that are useful substitutes
# for the real objects.

from typing import *

# NOTE:  MINIMIZE THE IMPORTS HERE
from .itkImagePython import *
from .ITKCommonBasePython import itkDataObject, itkProcessObject
import numpy as np


itkPointType_Proxie = NewType('itkPointType_Proxie',Sequence[float])

itkOriginType_Proxie = itkPointType_Proxie
itkSpacingType_Proxie = NewType('itkSpacingType_Proxie',Sequence[float])
itkDirectionType_Proxie = NewType('itkDirectionType_Proxie',Sequence[float])

itkIndexType_Proxie = NewType('itkIndexType_Proxie',Sequence[int])
itkSizeType_Proxie= NewType('itkSizeType_Proxie',Sequence[int])

itkContinuousIndexType_Proxie = itkPointType_Proxie

itkPixelValue_Proxie = NewType('itkPixelValue_Proxie', int, float, complex, Sequence[int], Sequence[float], Sequence[complex])


# itkImageBase_Proxie provides a common interface
# for all template versions of itkImageBase[234]
class itkImageBase_Proxie(itkDataObject):
  thisown: Any = ...

  def __init__(self, *args: Any, **kwargs: Any) -> None: ...

  Clone: Any = ...
  def GetImageDimension(self) -> int:...
  def SetOrigin(self, neworigin: itkOriginType_Proxie) -> None: ...
  def GetDirection(self) -> itkDirectionType_Proxie: ...
  def GetInverseDirection(self) -> itkDirectionType_Proxie: ...
  def GetSpacing(self) -> itkSpacingType_Proxie: ...
  def GetOrigin(self) -> itkOriginType_Proxie: ...
  Allocate: Any = ...
  def SetDirection(self, direction: itkDirectionType_Proxie) -> None: ...
  SetLargestPossibleRegion: Any = ...
  SetBufferedRegion: Any = ...
  SetRequestedRegion: Any = ...
  SetRegions: Any = ...
  GetOffsetTable: Any = ...
  ComputeOffset: Any = ...
  ComputeIndex: Any = ...
  def SetSpacing(self, newspacing: itkSpacingType_Proxie) -> None: ...
  Graft: Any = ...
  def GetNumberOfComponentsPerPixel(self) -> int: ...
  def SetNumberOfComponentsPerPixel(self, num_components: int) -> None: ...
  cast: Any = ...

  def GetBufferedRegion(self): ...

  def GetLargestPossibleRegion(self): ...

  def GetRequestedRegion(self): ...

  def TransformPhysicalPointToIndex(self, phys_point: itkPointType_Proxie) -> itkIndexType_Proxie:...
  def TransformPhysicalPointToContinuousIndex(self, phys_point: itkPointType_Proxie) -> itkContinuousIndexType_Proxie: ...
  def TransformContinuousIndexToPhysicalPoint(self, continuous_index: itkContinuousIndexType_Proxie) -> itkPointType_Proxie: ...
  def TransformIndexToPhysicalPoint(self, index: itkIndexType_Proxie) -> itkPointType_Proxie: ...

  @property
  def ndim(self) -> int: ...

  @property
  def shape(self)-> Sequence[int]: ...

  @property
  def dtype(self) -> np.dtype: ...

  def astype(self, pixel_type: Any): ...


  def keys(self): ...

  def __getitem__(self, key: Any): ...

  def __setitem__(self, key: Any, value: Any) -> None: ...

  def New(*args: Any, **kargs: Any): ...

  New: Any = ...

# itkImage_Proxie provides a common interface
# for all template versions of itkImage[UC|F|D|C|RGB|RGBA|SS][234]
class itkImage_Proxie(itkImageBase_Proxie):
    thisown: Any = ...

    def __init__(self, *args: Any, **kwargs: Any) -> None: ...

    Clone: Any = ...
    Allocate: Any = ...
    def FillBuffer(self, value: itkPixelValue_Proxie) -> None: ...
    def SetPixel(self, index: itkIndexType_Proxie, value: itkPixelValue_Proxie) -> None: ...
    def GetPixel(self) -> itkPixelValue_Proxie: ...
    GetBufferPointer: Any = ...
    GetPixelContainer: Any = ...
    SetPixelContainer: Any = ...
    Graft: Any = ...
    GetPixelAccessor: Any = ...
    GetNeighborhoodAccessor: Any = ...

    cast: Any = ...

    def __array__(self, dtype: Optional[Any] = ...): ...

    def New(*args: Any, **kargs: Any): ...

    New: Any = ...


class itkImageSource_Proxie(itkProcessObject):
    thisown: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def GetOutput(self) -> itkImage_Proxie: ...
    GraftOutput: Any = ...
    GraftNthOutput: Any = ...
    MakeOutput: Any = ...
    __swig_destroy__: Any = ...
    cast: Any = ...

class itkImageToImageFilter_Proxie(itkImageSource_Proxie):
    thisown: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def SetInput(self, inimage: itkPixelValue_Proxie) -> None: ...
    def GetInput(self)-> itkImage_Proxie: ...
    PushBackInput: Any = ...
    PopBackInput: Any = ...
    PushFrontInput: Any = ...
    PopFrontInput: Any = ...
    def SetCoordinateTolerance(self, tol: float) -> None: ...
    def GetCoordinateTolerance(self) -> float: ...
    def SetDirectionTolerance(self, tol: float) -> None: ...
    def GetDirectionTolerance(self) -> float: ...
    cast: Any = ...

itkImageOrImageSource_Proxie = Union[itkImageToImageFilter_Proxie, itkImage_Proxie]