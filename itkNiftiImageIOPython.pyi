import itk.stdcomplexPython
from typing import Any

class _SwigNonDynamicMeta(type):
    __setattr__: Any = ...

itkAnalyze75Flavor_AnalyzeITK4: Any
itkAnalyze75Flavor_AnalyzeFSL: Any
itkAnalyze75Flavor_AnalyzeSPM: Any
itkAnalyze75Flavor_AnalyzeITK4Warning: Any
itkAnalyze75Flavor_AnalyzeReject: Any

def itkNiftiImageIO_New(): ...

class itkNiftiImageIO(itk.ITKIOImageBaseBasePython.itkImageIOBase):
    thisown: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    __New_orig__: Any = ...
    Clone: Any = ...
    FileType_TwoFileNifti: Any = ...
    FileType_OneFileNifti: Any = ...
    FileType_Analyze75: Any = ...
    FileType_OtherOrError: Any = ...
    DetermineFileType: Any = ...
    SetRescaleSlope: Any = ...
    SetRescaleIntercept: Any = ...
    SetLegacyAnalyze75Mode: Any = ...
    GetLegacyAnalyze75Mode: Any = ...
    __swig_destroy__: Any = ...
    cast: Any = ...
    def New(*args: Any, **kargs: Any): ...
    New: Any = ...

itkNiftiImageIO___New_orig__: Any
itkNiftiImageIO_cast: Any

def itkNiftiImageIOFactory_New(): ...

class itkNiftiImageIOFactory(itk.ITKCommonBasePython.itkObjectFactoryBase):
    thisown: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    __New_orig__: Any = ...
    RegisterOneFactory: Any = ...
    __swig_destroy__: Any = ...
    cast: Any = ...
    def New(*args: Any, **kargs: Any): ...
    New: Any = ...

itkNiftiImageIOFactory___New_orig__: Any
itkNiftiImageIOFactory_RegisterOneFactory: Any
itkNiftiImageIOFactory_cast: Any
