import numpy as np
from typing import Any, Dict, Optional

class itkCType:
    __c_types__: Dict[str, itkCType] = ...
    __c_types_for_dtype__: Dict[str, np.dtype] = ...
    name: Any = ...
    short_name: Any = ...
    dtype: Any = ...
    def __init__(self, name: str, short_name: str, np_dtype: np.dtype=...) -> None: ...
    def __del__(self) -> None: ...
    @staticmethod
    def GetCType(name: str) -> Optional[itkCType]: ...
    @staticmethod
    def GetCTypeForDType(np_dtype: np.dtype) -> Optional[itkCType]: ...
    @staticmethod
    def initialize_c_types_once() -> Tuple[itkCType, itkCType, itkCType, itkCType, itkCType, itkCType, itkCType, itkCType, itkCType, itkCType, itkCType, itkCType, itkCType, itkCType]: ...

F: itkCType
D: itkCType
UC: itkCType
US: itkCType
UI: itkCType
UL: itkCType
SL: itkCType
LD: itkCType
ULL: itkCType
SC: itkCType
SS: itkCType
SI: itkCType
SLL: itkCType
B: itkCType
