import itk.itkImageToImageFilterAPython
from itk.support import itkHelpers as itkHelpers
from typing import Any

class _SwigNonDynamicMeta(type):
    __setattr__: Any = ...

def itkCannySegmentationLevelSetImageFilterIF2IF2F_New(): ...

class itkCannySegmentationLevelSetImageFilterIF2IF2F(itk.itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F):
    thisown: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    __New_orig__: Any = ...
    Clone: Any = ...
    SetThreshold: Any = ...
    GetThreshold: Any = ...
    SetVariance: Any = ...
    GetVariance: Any = ...
    GetCannyImage: Any = ...
    OutputHasNumericTraitsCheck: Any = ...
    __swig_destroy__: Any = ...
    cast: Any = ...
    def New(*args: Any, **kargs: Any): ...
    New: Any = ...

itkCannySegmentationLevelSetImageFilterIF2IF2F___New_orig__: Any
itkCannySegmentationLevelSetImageFilterIF2IF2F_cast: Any

def itkCannySegmentationLevelSetImageFilterIF3IF3F_New(): ...

class itkCannySegmentationLevelSetImageFilterIF3IF3F(itk.itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F):
    thisown: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    __New_orig__: Any = ...
    Clone: Any = ...
    SetThreshold: Any = ...
    GetThreshold: Any = ...
    SetVariance: Any = ...
    GetVariance: Any = ...
    GetCannyImage: Any = ...
    OutputHasNumericTraitsCheck: Any = ...
    __swig_destroy__: Any = ...
    cast: Any = ...
    def New(*args: Any, **kargs: Any): ...
    New: Any = ...

itkCannySegmentationLevelSetImageFilterIF3IF3F___New_orig__: Any
itkCannySegmentationLevelSetImageFilterIF3IF3F_cast: Any

def canny_segmentation_level_set_image_filter(*args: Any, **kwargs: Any): ...
def canny_segmentation_level_set_image_filter_init_docstring() -> None: ...
