import itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython
from itk.support import itkHelpers as itkHelpers
from typing import Any

class _SwigNonDynamicMeta(type):
    __setattr__: Any = ...

def itkSmoothingQuadEdgeMeshFilterQEMD2_New(): ...

class itkSmoothingQuadEdgeMeshFilterQEMD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    thisown: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    __New_orig__: Any = ...
    Clone: Any = ...
    SetCoefficientsMethod: Any = ...
    SetNumberOfIterations: Any = ...
    GetNumberOfIterations: Any = ...
    DelaunayConformingOn: Any = ...
    DelaunayConformingOff: Any = ...
    SetDelaunayConforming: Any = ...
    GetDelaunayConforming: Any = ...
    SetRelaxationFactor: Any = ...
    GetRelaxationFactor: Any = ...
    __swig_destroy__: Any = ...
    cast: Any = ...
    def New(*args: Any, **kargs: Any): ...
    New: Any = ...

itkSmoothingQuadEdgeMeshFilterQEMD2___New_orig__: Any
itkSmoothingQuadEdgeMeshFilterQEMD2_cast: Any

def itkSmoothingQuadEdgeMeshFilterQEMD3_New(): ...

class itkSmoothingQuadEdgeMeshFilterQEMD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    thisown: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    __New_orig__: Any = ...
    Clone: Any = ...
    SetCoefficientsMethod: Any = ...
    SetNumberOfIterations: Any = ...
    GetNumberOfIterations: Any = ...
    DelaunayConformingOn: Any = ...
    DelaunayConformingOff: Any = ...
    SetDelaunayConforming: Any = ...
    GetDelaunayConforming: Any = ...
    SetRelaxationFactor: Any = ...
    GetRelaxationFactor: Any = ...
    __swig_destroy__: Any = ...
    cast: Any = ...
    def New(*args: Any, **kargs: Any): ...
    New: Any = ...

itkSmoothingQuadEdgeMeshFilterQEMD3___New_orig__: Any
itkSmoothingQuadEdgeMeshFilterQEMD3_cast: Any

def smoothing_quad_edge_mesh_filter(*args: Any, **kwargs: Any): ...
def smoothing_quad_edge_mesh_filter_init_docstring() -> None: ...
