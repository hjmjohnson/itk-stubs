import itk.itkImageToImageFilterCommonPython
from itk.support import itkHelpers as itkHelpers
from typing import Any

class _SwigNonDynamicMeta(type):
    __setattr__: Any = ...

def itkLaplacianImageFilterIF2IF2_New(): ...

class itkLaplacianImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    thisown: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    __New_orig__: Any = ...
    Clone: Any = ...
    GenerateInputRequestedRegion: Any = ...
    UseImageSpacingOn: Any = ...
    UseImageSpacingOff: Any = ...
    SetUseImageSpacing: Any = ...
    GetUseImageSpacing: Any = ...
    SameDimensionCheck: Any = ...
    InputPixelTypeIsFloatingPointCheck: Any = ...
    OutputPixelTypeIsFloatingPointCheck: Any = ...
    __swig_destroy__: Any = ...
    cast: Any = ...
    def New(*args: Any, **kargs: Any): ...
    New: Any = ...

itkLaplacianImageFilterIF2IF2___New_orig__: Any
itkLaplacianImageFilterIF2IF2_cast: Any

def itkLaplacianImageFilterIF3IF3_New(): ...

class itkLaplacianImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    thisown: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    __New_orig__: Any = ...
    Clone: Any = ...
    GenerateInputRequestedRegion: Any = ...
    UseImageSpacingOn: Any = ...
    UseImageSpacingOff: Any = ...
    SetUseImageSpacing: Any = ...
    GetUseImageSpacing: Any = ...
    SameDimensionCheck: Any = ...
    InputPixelTypeIsFloatingPointCheck: Any = ...
    OutputPixelTypeIsFloatingPointCheck: Any = ...
    __swig_destroy__: Any = ...
    cast: Any = ...
    def New(*args: Any, **kargs: Any): ...
    New: Any = ...

itkLaplacianImageFilterIF3IF3___New_orig__: Any
itkLaplacianImageFilterIF3IF3_cast: Any

def laplacian_image_filter(*args: Any, **kwargs: Any): ...
def laplacian_image_filter_init_docstring() -> None: ...
