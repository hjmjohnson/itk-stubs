from typing import Any

class _SwigNonDynamicMeta(type):
    __setattr__: Any = ...

class vnl_vectorCF:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    put: Any = ...
    get: Any = ...
    fill: Any = ...
    copy_in: Any = ...
    copy_out: Any = ...
    set: Any = ...
    __call__: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    pre_multiply: Any = ...
    post_multiply: Any = ...
    __imul__: Any = ...
    __pos__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    data_block: Any = ...
    begin: Any = ...
    end: Any = ...
    front: Any = ...
    back: Any = ...
    extract: Any = ...
    update: Any = ...
    squared_magnitude: Any = ...
    magnitude: Any = ...
    one_norm: Any = ...
    two_norm: Any = ...
    inf_norm: Any = ...
    normalize: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    sum: Any = ...
    flip: Any = ...
    roll: Any = ...
    roll_inplace: Any = ...
    swap: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    is_finite: Any = ...
    is_zero: Any = ...
    empty: Any = ...
    is_equal: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    set_size: Any = ...
    clear: Any = ...
    read_ascii: Any = ...
    read: Any = ...
    set_data: Any = ...
    set_data_same_size: Any = ...

vnl_vectorCF_read: Any

class vnl_vectorD:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    put: Any = ...
    get: Any = ...
    fill: Any = ...
    copy_in: Any = ...
    copy_out: Any = ...
    set: Any = ...
    __call__: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    pre_multiply: Any = ...
    post_multiply: Any = ...
    __imul__: Any = ...
    __pos__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    data_block: Any = ...
    begin: Any = ...
    end: Any = ...
    front: Any = ...
    back: Any = ...
    extract: Any = ...
    update: Any = ...
    squared_magnitude: Any = ...
    magnitude: Any = ...
    one_norm: Any = ...
    two_norm: Any = ...
    inf_norm: Any = ...
    normalize: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    sum: Any = ...
    flip: Any = ...
    roll: Any = ...
    roll_inplace: Any = ...
    swap: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    is_finite: Any = ...
    is_zero: Any = ...
    empty: Any = ...
    is_equal: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    set_size: Any = ...
    clear: Any = ...
    read_ascii: Any = ...
    read: Any = ...
    set_data: Any = ...
    set_data_same_size: Any = ...

vnl_vectorD_read: Any

class vnl_vectorF:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    put: Any = ...
    get: Any = ...
    fill: Any = ...
    copy_in: Any = ...
    copy_out: Any = ...
    set: Any = ...
    __call__: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    pre_multiply: Any = ...
    post_multiply: Any = ...
    __imul__: Any = ...
    __pos__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    data_block: Any = ...
    begin: Any = ...
    end: Any = ...
    front: Any = ...
    back: Any = ...
    extract: Any = ...
    update: Any = ...
    squared_magnitude: Any = ...
    magnitude: Any = ...
    one_norm: Any = ...
    two_norm: Any = ...
    inf_norm: Any = ...
    normalize: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    sum: Any = ...
    flip: Any = ...
    roll: Any = ...
    roll_inplace: Any = ...
    swap: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    is_finite: Any = ...
    is_zero: Any = ...
    empty: Any = ...
    is_equal: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    set_size: Any = ...
    clear: Any = ...
    read_ascii: Any = ...
    read: Any = ...
    set_data: Any = ...
    set_data_same_size: Any = ...

vnl_vectorF_read: Any

class vnl_vectorLD:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    put: Any = ...
    get: Any = ...
    fill: Any = ...
    copy_in: Any = ...
    copy_out: Any = ...
    set: Any = ...
    __call__: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    pre_multiply: Any = ...
    post_multiply: Any = ...
    __imul__: Any = ...
    __pos__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    data_block: Any = ...
    begin: Any = ...
    end: Any = ...
    front: Any = ...
    back: Any = ...
    extract: Any = ...
    update: Any = ...
    squared_magnitude: Any = ...
    magnitude: Any = ...
    one_norm: Any = ...
    two_norm: Any = ...
    inf_norm: Any = ...
    normalize: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    sum: Any = ...
    flip: Any = ...
    roll: Any = ...
    roll_inplace: Any = ...
    swap: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    is_finite: Any = ...
    is_zero: Any = ...
    empty: Any = ...
    is_equal: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    set_size: Any = ...
    clear: Any = ...
    read_ascii: Any = ...
    read: Any = ...
    set_data: Any = ...
    set_data_same_size: Any = ...

vnl_vectorLD_read: Any

class vnl_vectorSC:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    put: Any = ...
    get: Any = ...
    fill: Any = ...
    copy_in: Any = ...
    copy_out: Any = ...
    set: Any = ...
    __call__: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    pre_multiply: Any = ...
    post_multiply: Any = ...
    __imul__: Any = ...
    __pos__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    data_block: Any = ...
    begin: Any = ...
    end: Any = ...
    front: Any = ...
    back: Any = ...
    extract: Any = ...
    update: Any = ...
    squared_magnitude: Any = ...
    magnitude: Any = ...
    one_norm: Any = ...
    two_norm: Any = ...
    inf_norm: Any = ...
    normalize: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    sum: Any = ...
    flip: Any = ...
    roll: Any = ...
    roll_inplace: Any = ...
    swap: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    is_finite: Any = ...
    is_zero: Any = ...
    empty: Any = ...
    is_equal: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    set_size: Any = ...
    clear: Any = ...
    read_ascii: Any = ...
    read: Any = ...
    set_data: Any = ...
    set_data_same_size: Any = ...

vnl_vectorSC_read: Any

class vnl_vectorSI:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    put: Any = ...
    get: Any = ...
    fill: Any = ...
    copy_in: Any = ...
    copy_out: Any = ...
    set: Any = ...
    __call__: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    pre_multiply: Any = ...
    post_multiply: Any = ...
    __imul__: Any = ...
    __pos__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    data_block: Any = ...
    begin: Any = ...
    end: Any = ...
    front: Any = ...
    back: Any = ...
    extract: Any = ...
    update: Any = ...
    squared_magnitude: Any = ...
    magnitude: Any = ...
    one_norm: Any = ...
    two_norm: Any = ...
    inf_norm: Any = ...
    normalize: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    sum: Any = ...
    flip: Any = ...
    roll: Any = ...
    roll_inplace: Any = ...
    swap: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    is_finite: Any = ...
    is_zero: Any = ...
    empty: Any = ...
    is_equal: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    set_size: Any = ...
    clear: Any = ...
    read_ascii: Any = ...
    read: Any = ...
    set_data: Any = ...
    set_data_same_size: Any = ...

vnl_vectorSI_read: Any

class vnl_vectorSL:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    put: Any = ...
    get: Any = ...
    fill: Any = ...
    copy_in: Any = ...
    copy_out: Any = ...
    set: Any = ...
    __call__: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    pre_multiply: Any = ...
    post_multiply: Any = ...
    __imul__: Any = ...
    __pos__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    data_block: Any = ...
    begin: Any = ...
    end: Any = ...
    front: Any = ...
    back: Any = ...
    extract: Any = ...
    update: Any = ...
    squared_magnitude: Any = ...
    magnitude: Any = ...
    one_norm: Any = ...
    two_norm: Any = ...
    inf_norm: Any = ...
    normalize: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    sum: Any = ...
    flip: Any = ...
    roll: Any = ...
    roll_inplace: Any = ...
    swap: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    is_finite: Any = ...
    is_zero: Any = ...
    empty: Any = ...
    is_equal: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    set_size: Any = ...
    clear: Any = ...
    read_ascii: Any = ...
    read: Any = ...
    set_data: Any = ...
    set_data_same_size: Any = ...

vnl_vectorSL_read: Any

class vnl_vectorSLL:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    put: Any = ...
    get: Any = ...
    fill: Any = ...
    copy_in: Any = ...
    copy_out: Any = ...
    set: Any = ...
    __call__: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    pre_multiply: Any = ...
    post_multiply: Any = ...
    __imul__: Any = ...
    __pos__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    data_block: Any = ...
    begin: Any = ...
    end: Any = ...
    front: Any = ...
    back: Any = ...
    extract: Any = ...
    update: Any = ...
    squared_magnitude: Any = ...
    magnitude: Any = ...
    one_norm: Any = ...
    two_norm: Any = ...
    inf_norm: Any = ...
    normalize: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    sum: Any = ...
    flip: Any = ...
    roll: Any = ...
    roll_inplace: Any = ...
    swap: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    is_finite: Any = ...
    is_zero: Any = ...
    empty: Any = ...
    is_equal: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    set_size: Any = ...
    clear: Any = ...
    read_ascii: Any = ...
    read: Any = ...
    set_data: Any = ...
    set_data_same_size: Any = ...

vnl_vectorSLL_read: Any

class vnl_vectorSS:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    put: Any = ...
    get: Any = ...
    fill: Any = ...
    copy_in: Any = ...
    copy_out: Any = ...
    set: Any = ...
    __call__: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    pre_multiply: Any = ...
    post_multiply: Any = ...
    __imul__: Any = ...
    __pos__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    data_block: Any = ...
    begin: Any = ...
    end: Any = ...
    front: Any = ...
    back: Any = ...
    extract: Any = ...
    update: Any = ...
    squared_magnitude: Any = ...
    magnitude: Any = ...
    one_norm: Any = ...
    two_norm: Any = ...
    inf_norm: Any = ...
    normalize: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    sum: Any = ...
    flip: Any = ...
    roll: Any = ...
    roll_inplace: Any = ...
    swap: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    is_finite: Any = ...
    is_zero: Any = ...
    empty: Any = ...
    is_equal: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    set_size: Any = ...
    clear: Any = ...
    read_ascii: Any = ...
    read: Any = ...
    set_data: Any = ...
    set_data_same_size: Any = ...

vnl_vectorSS_read: Any

class vnl_vectorUC:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    put: Any = ...
    get: Any = ...
    fill: Any = ...
    copy_in: Any = ...
    copy_out: Any = ...
    set: Any = ...
    __call__: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    pre_multiply: Any = ...
    post_multiply: Any = ...
    __imul__: Any = ...
    __pos__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    data_block: Any = ...
    begin: Any = ...
    end: Any = ...
    front: Any = ...
    back: Any = ...
    extract: Any = ...
    update: Any = ...
    squared_magnitude: Any = ...
    magnitude: Any = ...
    one_norm: Any = ...
    two_norm: Any = ...
    inf_norm: Any = ...
    normalize: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    sum: Any = ...
    flip: Any = ...
    roll: Any = ...
    roll_inplace: Any = ...
    swap: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    is_finite: Any = ...
    is_zero: Any = ...
    empty: Any = ...
    is_equal: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    set_size: Any = ...
    clear: Any = ...
    read_ascii: Any = ...
    read: Any = ...
    set_data: Any = ...
    set_data_same_size: Any = ...

vnl_vectorUC_read: Any

class vnl_vectorUI:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    put: Any = ...
    get: Any = ...
    fill: Any = ...
    copy_in: Any = ...
    copy_out: Any = ...
    set: Any = ...
    __call__: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    pre_multiply: Any = ...
    post_multiply: Any = ...
    __imul__: Any = ...
    __pos__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    data_block: Any = ...
    begin: Any = ...
    end: Any = ...
    front: Any = ...
    back: Any = ...
    extract: Any = ...
    update: Any = ...
    squared_magnitude: Any = ...
    magnitude: Any = ...
    one_norm: Any = ...
    two_norm: Any = ...
    inf_norm: Any = ...
    normalize: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    sum: Any = ...
    flip: Any = ...
    roll: Any = ...
    roll_inplace: Any = ...
    swap: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    is_finite: Any = ...
    is_zero: Any = ...
    empty: Any = ...
    is_equal: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    set_size: Any = ...
    clear: Any = ...
    read_ascii: Any = ...
    read: Any = ...
    set_data: Any = ...
    set_data_same_size: Any = ...

vnl_vectorUI_read: Any

class vnl_vectorUL:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    put: Any = ...
    get: Any = ...
    fill: Any = ...
    copy_in: Any = ...
    copy_out: Any = ...
    set: Any = ...
    __call__: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    pre_multiply: Any = ...
    post_multiply: Any = ...
    __imul__: Any = ...
    __pos__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    data_block: Any = ...
    begin: Any = ...
    end: Any = ...
    front: Any = ...
    back: Any = ...
    extract: Any = ...
    update: Any = ...
    squared_magnitude: Any = ...
    magnitude: Any = ...
    one_norm: Any = ...
    two_norm: Any = ...
    inf_norm: Any = ...
    normalize: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    sum: Any = ...
    flip: Any = ...
    roll: Any = ...
    roll_inplace: Any = ...
    swap: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    is_finite: Any = ...
    is_zero: Any = ...
    empty: Any = ...
    is_equal: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    set_size: Any = ...
    clear: Any = ...
    read_ascii: Any = ...
    read: Any = ...
    set_data: Any = ...
    set_data_same_size: Any = ...

vnl_vectorUL_read: Any

class vnl_vectorULL:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    put: Any = ...
    get: Any = ...
    fill: Any = ...
    copy_in: Any = ...
    copy_out: Any = ...
    set: Any = ...
    __call__: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    pre_multiply: Any = ...
    post_multiply: Any = ...
    __imul__: Any = ...
    __pos__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    data_block: Any = ...
    begin: Any = ...
    end: Any = ...
    front: Any = ...
    back: Any = ...
    extract: Any = ...
    update: Any = ...
    squared_magnitude: Any = ...
    magnitude: Any = ...
    one_norm: Any = ...
    two_norm: Any = ...
    inf_norm: Any = ...
    normalize: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    sum: Any = ...
    flip: Any = ...
    roll: Any = ...
    roll_inplace: Any = ...
    swap: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    is_finite: Any = ...
    is_zero: Any = ...
    empty: Any = ...
    is_equal: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    set_size: Any = ...
    clear: Any = ...
    read_ascii: Any = ...
    read: Any = ...
    set_data: Any = ...
    set_data_same_size: Any = ...

vnl_vectorULL_read: Any

class vnl_vectorUS:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    put: Any = ...
    get: Any = ...
    fill: Any = ...
    copy_in: Any = ...
    copy_out: Any = ...
    set: Any = ...
    __call__: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    pre_multiply: Any = ...
    post_multiply: Any = ...
    __imul__: Any = ...
    __pos__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    data_block: Any = ...
    begin: Any = ...
    end: Any = ...
    front: Any = ...
    back: Any = ...
    extract: Any = ...
    update: Any = ...
    squared_magnitude: Any = ...
    magnitude: Any = ...
    one_norm: Any = ...
    two_norm: Any = ...
    inf_norm: Any = ...
    normalize: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    sum: Any = ...
    flip: Any = ...
    roll: Any = ...
    roll_inplace: Any = ...
    swap: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    is_finite: Any = ...
    is_zero: Any = ...
    empty: Any = ...
    is_equal: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    set_size: Any = ...
    clear: Any = ...
    read_ascii: Any = ...
    read: Any = ...
    set_data: Any = ...
    set_data_same_size: Any = ...

vnl_vectorUS_read: Any
