from typing import Any

class _SwigNonDynamicMeta(type):
    __setattr__: Any = ...

class SwigPyIterator:
    thisown: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    __swig_destroy__: Any = ...
    value: Any = ...
    incr: Any = ...
    decr: Any = ...
    distance: Any = ...
    equal: Any = ...
    copy: Any = ...
    next: Any = ...
    __next__: Any = ...
    previous: Any = ...
    advance: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    def __iter__(self) -> Any: ...

class ios_base:
    thisown: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    erase_event: Any = ...
    imbue_event: Any = ...
    copyfmt_event: Any = ...
    register_callback: Any = ...
    flags: Any = ...
    setf: Any = ...
    unsetf: Any = ...
    precision: Any = ...
    width: Any = ...
    sync_with_stdio: Any = ...
    imbue: Any = ...
    getloc: Any = ...
    xalloc: Any = ...
    iword: Any = ...
    pword: Any = ...
    __swig_destroy__: Any = ...

cvar: Any
ios_base_sync_with_stdio: Any
ios_base_xalloc: Any

class ios(ios_base):
    thisown: Any = ...
    rdstate: Any = ...
    clear: Any = ...
    setstate: Any = ...
    good: Any = ...
    eof: Any = ...
    fail: Any = ...
    bad: Any = ...
    exceptions: Any = ...
    def __init__(self, __sb: 'std::basic_streambuf< char,std::char_traits< char > > *') -> None: ...
    __swig_destroy__: Any = ...
    tie: Any = ...
    rdbuf: Any = ...
    copyfmt: Any = ...
    fill: Any = ...
    imbue: Any = ...
    narrow: Any = ...
    widen: Any = ...

class ostream(ios):
    thisown: Any = ...
    def __init__(self, __sb: 'std::basic_streambuf< char,std::char_traits< char > > *') -> None: ...
    __swig_destroy__: Any = ...
    __lshift__: Any = ...
    put: Any = ...
    write: Any = ...
    flush: Any = ...
    tellp: Any = ...
    seekp: Any = ...

cin: Any
cout: Any
cerr: Any
clog: Any

class istream(ios):
    thisown: Any = ...
    def __init__(self, __sb: 'std::basic_streambuf< char,std::char_traits< char > > *') -> None: ...
    __swig_destroy__: Any = ...
    __rshift__: Any = ...
    gcount: Any = ...
    get: Any = ...
    getline: Any = ...
    ignore: Any = ...
    peek: Any = ...
    read: Any = ...
    readsome: Any = ...
    putback: Any = ...
    unget: Any = ...
    sync: Any = ...
    tellg: Any = ...
    seekg: Any = ...

class iostream(istream, ostream):
    thisown: Any = ...
    def __init__(self, __sb: 'std::basic_streambuf< char,std::char_traits< char > > *') -> None: ...
    __swig_destroy__: Any = ...

endl_cb_ptr: Any
endl: Any
ends_cb_ptr: Any
ends: Any
flush_cb_ptr: Any
flush: Any
str = str

class mapULD:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    def __iter__(self) -> Any: ...
    def iterkeys(self): ...
    def itervalues(self): ...
    def iteritems(self): ...
    __getitem__: Any = ...
    __delitem__: Any = ...
    has_key: Any = ...
    keys: Any = ...
    values: Any = ...
    items: Any = ...
    __contains__: Any = ...
    key_iterator: Any = ...
    value_iterator: Any = ...
    __setitem__: Any = ...
    asdict: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    count: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    __swig_destroy__: Any = ...

class mapBB:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    def __iter__(self) -> Any: ...
    def iterkeys(self): ...
    def itervalues(self): ...
    def iteritems(self): ...
    __getitem__: Any = ...
    __delitem__: Any = ...
    has_key: Any = ...
    keys: Any = ...
    values: Any = ...
    items: Any = ...
    __contains__: Any = ...
    key_iterator: Any = ...
    value_iterator: Any = ...
    __setitem__: Any = ...
    asdict: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    count: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    __swig_destroy__: Any = ...

class mapII:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    def __iter__(self) -> Any: ...
    def iterkeys(self): ...
    def itervalues(self): ...
    def iteritems(self): ...
    __getitem__: Any = ...
    __delitem__: Any = ...
    has_key: Any = ...
    keys: Any = ...
    values: Any = ...
    items: Any = ...
    __contains__: Any = ...
    key_iterator: Any = ...
    value_iterator: Any = ...
    __setitem__: Any = ...
    asdict: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    count: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    __swig_destroy__: Any = ...

class mapUCUC:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    def __iter__(self) -> Any: ...
    def iterkeys(self): ...
    def itervalues(self): ...
    def iteritems(self): ...
    __getitem__: Any = ...
    __delitem__: Any = ...
    has_key: Any = ...
    keys: Any = ...
    values: Any = ...
    items: Any = ...
    __contains__: Any = ...
    key_iterator: Any = ...
    value_iterator: Any = ...
    __setitem__: Any = ...
    asdict: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    count: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    __swig_destroy__: Any = ...

class mapUIUI:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    def __iter__(self) -> Any: ...
    def iterkeys(self): ...
    def itervalues(self): ...
    def iteritems(self): ...
    __getitem__: Any = ...
    __delitem__: Any = ...
    has_key: Any = ...
    keys: Any = ...
    values: Any = ...
    items: Any = ...
    __contains__: Any = ...
    key_iterator: Any = ...
    value_iterator: Any = ...
    __setitem__: Any = ...
    asdict: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    count: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    __swig_destroy__: Any = ...

class mapUSUS:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    def __iter__(self) -> Any: ...
    def iterkeys(self): ...
    def itervalues(self): ...
    def iteritems(self): ...
    __getitem__: Any = ...
    __delitem__: Any = ...
    has_key: Any = ...
    keys: Any = ...
    values: Any = ...
    items: Any = ...
    __contains__: Any = ...
    key_iterator: Any = ...
    value_iterator: Any = ...
    __setitem__: Any = ...
    asdict: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    count: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    __swig_destroy__: Any = ...

class mapULUL:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    def __iter__(self) -> Any: ...
    def iterkeys(self): ...
    def itervalues(self): ...
    def iteritems(self): ...
    __getitem__: Any = ...
    __delitem__: Any = ...
    has_key: Any = ...
    keys: Any = ...
    values: Any = ...
    items: Any = ...
    __contains__: Any = ...
    key_iterator: Any = ...
    value_iterator: Any = ...
    __setitem__: Any = ...
    asdict: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    count: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    __swig_destroy__: Any = ...

class mapSCSC:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    def __iter__(self) -> Any: ...
    def iterkeys(self): ...
    def itervalues(self): ...
    def iteritems(self): ...
    __getitem__: Any = ...
    __delitem__: Any = ...
    has_key: Any = ...
    keys: Any = ...
    values: Any = ...
    items: Any = ...
    __contains__: Any = ...
    key_iterator: Any = ...
    value_iterator: Any = ...
    __setitem__: Any = ...
    asdict: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    count: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    __swig_destroy__: Any = ...

class mapSSSS:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    def __iter__(self) -> Any: ...
    def iterkeys(self): ...
    def itervalues(self): ...
    def iteritems(self): ...
    __getitem__: Any = ...
    __delitem__: Any = ...
    has_key: Any = ...
    keys: Any = ...
    values: Any = ...
    items: Any = ...
    __contains__: Any = ...
    key_iterator: Any = ...
    value_iterator: Any = ...
    __setitem__: Any = ...
    asdict: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    count: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    __swig_destroy__: Any = ...

class mapSLSL:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    def __iter__(self) -> Any: ...
    def iterkeys(self): ...
    def itervalues(self): ...
    def iteritems(self): ...
    __getitem__: Any = ...
    __delitem__: Any = ...
    has_key: Any = ...
    keys: Any = ...
    values: Any = ...
    items: Any = ...
    __contains__: Any = ...
    key_iterator: Any = ...
    value_iterator: Any = ...
    __setitem__: Any = ...
    asdict: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    count: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    __swig_destroy__: Any = ...

class mapFF:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    def __iter__(self) -> Any: ...
    def iterkeys(self): ...
    def itervalues(self): ...
    def iteritems(self): ...
    __getitem__: Any = ...
    __delitem__: Any = ...
    has_key: Any = ...
    keys: Any = ...
    values: Any = ...
    items: Any = ...
    __contains__: Any = ...
    key_iterator: Any = ...
    value_iterator: Any = ...
    __setitem__: Any = ...
    asdict: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    count: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    __swig_destroy__: Any = ...

class mapDD:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    def __iter__(self) -> Any: ...
    def iterkeys(self): ...
    def itervalues(self): ...
    def iteritems(self): ...
    __getitem__: Any = ...
    __delitem__: Any = ...
    has_key: Any = ...
    keys: Any = ...
    values: Any = ...
    items: Any = ...
    __contains__: Any = ...
    key_iterator: Any = ...
    value_iterator: Any = ...
    __setitem__: Any = ...
    asdict: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    count: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    __swig_destroy__: Any = ...

class pairI:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    first: Any = ...
    second: Any = ...
    def __len__(self): ...
    def __getitem__(self, index: Any): ...
    def __setitem__(self, index: Any, val: Any) -> None: ...
    __swig_destroy__: Any = ...

class pairUI:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    first: Any = ...
    second: Any = ...
    def __len__(self): ...
    def __getitem__(self, index: Any): ...
    def __setitem__(self, index: Any, val: Any) -> None: ...
    __swig_destroy__: Any = ...

class vectorB:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class vectorvectorB:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class vectorI:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class vectorvectorI:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class vectorUC:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class vectorvectorUC:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class vectorUS:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class vectorvectorUS:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class vectorUI:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class vectorvectorUI:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class vectorUL:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class vectorvectorUL:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class vectorSC:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class vectorvectorSC:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class vectorSS:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class vectorvectorSS:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class vectorSL:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class vectorvectorSL:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class vectorF:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class vectorvectorF:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class vectorD:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class vectorvectorD:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class vectorstring:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class listB:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    pop_front: Any = ...
    push_front: Any = ...
    reverse: Any = ...
    __swig_destroy__: Any = ...

class listI:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    pop_front: Any = ...
    push_front: Any = ...
    reverse: Any = ...
    __swig_destroy__: Any = ...

class listUC:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    pop_front: Any = ...
    push_front: Any = ...
    reverse: Any = ...
    __swig_destroy__: Any = ...

class listUS:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    pop_front: Any = ...
    push_front: Any = ...
    reverse: Any = ...
    __swig_destroy__: Any = ...

class listUI:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    pop_front: Any = ...
    push_front: Any = ...
    reverse: Any = ...
    __swig_destroy__: Any = ...

class listUL:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    pop_front: Any = ...
    push_front: Any = ...
    reverse: Any = ...
    __swig_destroy__: Any = ...

class listSC:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    pop_front: Any = ...
    push_front: Any = ...
    reverse: Any = ...
    __swig_destroy__: Any = ...

class listSS:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    pop_front: Any = ...
    push_front: Any = ...
    reverse: Any = ...
    __swig_destroy__: Any = ...

class listSL:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    pop_front: Any = ...
    push_front: Any = ...
    reverse: Any = ...
    __swig_destroy__: Any = ...

class listF:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    pop_front: Any = ...
    push_front: Any = ...
    reverse: Any = ...
    __swig_destroy__: Any = ...

class listD:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    pop_front: Any = ...
    push_front: Any = ...
    reverse: Any = ...
    __swig_destroy__: Any = ...

class liststring:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    pop_front: Any = ...
    push_front: Any = ...
    reverse: Any = ...
    __swig_destroy__: Any = ...

class setB:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    append: Any = ...
    __contains__: Any = ...
    __getitem__: Any = ...
    add: Any = ...
    discard: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    clear: Any = ...
    swap: Any = ...
    count: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    equal_range: Any = ...
    insert: Any = ...
    __swig_destroy__: Any = ...

class setI:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    append: Any = ...
    __contains__: Any = ...
    __getitem__: Any = ...
    add: Any = ...
    discard: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    clear: Any = ...
    swap: Any = ...
    count: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    equal_range: Any = ...
    insert: Any = ...
    __swig_destroy__: Any = ...

class setUC:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    append: Any = ...
    __contains__: Any = ...
    __getitem__: Any = ...
    add: Any = ...
    discard: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    clear: Any = ...
    swap: Any = ...
    count: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    equal_range: Any = ...
    insert: Any = ...
    __swig_destroy__: Any = ...

class setUS:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    append: Any = ...
    __contains__: Any = ...
    __getitem__: Any = ...
    add: Any = ...
    discard: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    clear: Any = ...
    swap: Any = ...
    count: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    equal_range: Any = ...
    insert: Any = ...
    __swig_destroy__: Any = ...

class setUI:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    append: Any = ...
    __contains__: Any = ...
    __getitem__: Any = ...
    add: Any = ...
    discard: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    clear: Any = ...
    swap: Any = ...
    count: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    equal_range: Any = ...
    insert: Any = ...
    __swig_destroy__: Any = ...

class setUL:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    append: Any = ...
    __contains__: Any = ...
    __getitem__: Any = ...
    add: Any = ...
    discard: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    clear: Any = ...
    swap: Any = ...
    count: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    equal_range: Any = ...
    insert: Any = ...
    __swig_destroy__: Any = ...

class setULL:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    append: Any = ...
    __contains__: Any = ...
    __getitem__: Any = ...
    add: Any = ...
    discard: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    clear: Any = ...
    swap: Any = ...
    count: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    equal_range: Any = ...
    insert: Any = ...
    __swig_destroy__: Any = ...

class setSC:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    append: Any = ...
    __contains__: Any = ...
    __getitem__: Any = ...
    add: Any = ...
    discard: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    clear: Any = ...
    swap: Any = ...
    count: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    equal_range: Any = ...
    insert: Any = ...
    __swig_destroy__: Any = ...

class setSS:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    append: Any = ...
    __contains__: Any = ...
    __getitem__: Any = ...
    add: Any = ...
    discard: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    clear: Any = ...
    swap: Any = ...
    count: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    equal_range: Any = ...
    insert: Any = ...
    __swig_destroy__: Any = ...

class setSL:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    append: Any = ...
    __contains__: Any = ...
    __getitem__: Any = ...
    add: Any = ...
    discard: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    clear: Any = ...
    swap: Any = ...
    count: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    equal_range: Any = ...
    insert: Any = ...
    __swig_destroy__: Any = ...

class setSLL:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    append: Any = ...
    __contains__: Any = ...
    __getitem__: Any = ...
    add: Any = ...
    discard: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    clear: Any = ...
    swap: Any = ...
    count: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    equal_range: Any = ...
    insert: Any = ...
    __swig_destroy__: Any = ...

class setF:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    append: Any = ...
    __contains__: Any = ...
    __getitem__: Any = ...
    add: Any = ...
    discard: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    clear: Any = ...
    swap: Any = ...
    count: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    equal_range: Any = ...
    insert: Any = ...
    __swig_destroy__: Any = ...

class setD:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    append: Any = ...
    __contains__: Any = ...
    __getitem__: Any = ...
    add: Any = ...
    discard: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    clear: Any = ...
    swap: Any = ...
    count: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    equal_range: Any = ...
    insert: Any = ...
    __swig_destroy__: Any = ...

class vectorsetUL:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    __getslice__: Any = ...
    __setslice__: Any = ...
    __delslice__: Any = ...
    __delitem__: Any = ...
    __getitem__: Any = ...
    __setitem__: Any = ...
    pop: Any = ...
    append: Any = ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    pop_back: Any = ...
    erase: Any = ...
    def __init__(self, *args: Any) -> None: ...
    push_back: Any = ...
    front: Any = ...
    back: Any = ...
    assign: Any = ...
    resize: Any = ...
    insert: Any = ...
    reserve: Any = ...
    capacity: Any = ...
    __swig_destroy__: Any = ...

class mapsetUL:
    thisown: Any = ...
    iterator: Any = ...
    def __iter__(self) -> Any: ...
    __nonzero__: Any = ...
    __bool__: Any = ...
    __len__: Any = ...
    def __iter__(self) -> Any: ...
    def iterkeys(self): ...
    def itervalues(self): ...
    def iteritems(self): ...
    __getitem__: Any = ...
    __delitem__: Any = ...
    has_key: Any = ...
    keys: Any = ...
    values: Any = ...
    items: Any = ...
    __contains__: Any = ...
    key_iterator: Any = ...
    value_iterator: Any = ...
    __setitem__: Any = ...
    asdict: Any = ...
    def __init__(self, *args: Any) -> None: ...
    empty: Any = ...
    size: Any = ...
    swap: Any = ...
    begin: Any = ...
    end: Any = ...
    rbegin: Any = ...
    rend: Any = ...
    clear: Any = ...
    get_allocator: Any = ...
    count: Any = ...
    erase: Any = ...
    find: Any = ...
    lower_bound: Any = ...
    upper_bound: Any = ...
    __swig_destroy__: Any = ...
