from typing import Any

class _SwigNonDynamicMeta(type):
    __setattr__: Any = ...

class vnl_diag_matrixCF:
    thisown: Any = ...
    __swig_destroy__: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __imul__: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    invert_in_place: Any = ...
    determinant: Any = ...
    solve: Any = ...
    __call__: Any = ...
    get_diagonal: Any = ...
    diagonal: Any = ...
    fill_diagonal: Any = ...
    set_diagonal: Any = ...
    begin: Any = ...
    end: Any = ...
    size: Any = ...
    rows: Any = ...
    cols: Any = ...
    columns: Any = ...
    put: Any = ...
    get: Any = ...
    as_matrix: Any = ...
    set_size: Any = ...
    clear: Any = ...
    fill: Any = ...
    data_block: Any = ...
    set: Any = ...

class vnl_diag_matrixD:
    thisown: Any = ...
    __swig_destroy__: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __imul__: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    invert_in_place: Any = ...
    determinant: Any = ...
    solve: Any = ...
    __call__: Any = ...
    get_diagonal: Any = ...
    diagonal: Any = ...
    fill_diagonal: Any = ...
    set_diagonal: Any = ...
    begin: Any = ...
    end: Any = ...
    size: Any = ...
    rows: Any = ...
    cols: Any = ...
    columns: Any = ...
    put: Any = ...
    get: Any = ...
    as_matrix: Any = ...
    set_size: Any = ...
    clear: Any = ...
    fill: Any = ...
    data_block: Any = ...
    set: Any = ...

class vnl_diag_matrixF:
    thisown: Any = ...
    __swig_destroy__: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __imul__: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    invert_in_place: Any = ...
    determinant: Any = ...
    solve: Any = ...
    __call__: Any = ...
    get_diagonal: Any = ...
    diagonal: Any = ...
    fill_diagonal: Any = ...
    set_diagonal: Any = ...
    begin: Any = ...
    end: Any = ...
    size: Any = ...
    rows: Any = ...
    cols: Any = ...
    columns: Any = ...
    put: Any = ...
    get: Any = ...
    as_matrix: Any = ...
    set_size: Any = ...
    clear: Any = ...
    fill: Any = ...
    data_block: Any = ...
    set: Any = ...

class vnl_diag_matrixLD:
    thisown: Any = ...
    __swig_destroy__: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __imul__: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    invert_in_place: Any = ...
    determinant: Any = ...
    solve: Any = ...
    __call__: Any = ...
    get_diagonal: Any = ...
    diagonal: Any = ...
    fill_diagonal: Any = ...
    set_diagonal: Any = ...
    begin: Any = ...
    end: Any = ...
    size: Any = ...
    rows: Any = ...
    cols: Any = ...
    columns: Any = ...
    put: Any = ...
    get: Any = ...
    as_matrix: Any = ...
    set_size: Any = ...
    clear: Any = ...
    fill: Any = ...
    data_block: Any = ...
    set: Any = ...

class vnl_diag_matrixSI:
    thisown: Any = ...
    __swig_destroy__: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __imul__: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    invert_in_place: Any = ...
    determinant: Any = ...
    solve: Any = ...
    __call__: Any = ...
    get_diagonal: Any = ...
    diagonal: Any = ...
    fill_diagonal: Any = ...
    set_diagonal: Any = ...
    begin: Any = ...
    end: Any = ...
    size: Any = ...
    rows: Any = ...
    cols: Any = ...
    columns: Any = ...
    put: Any = ...
    get: Any = ...
    as_matrix: Any = ...
    set_size: Any = ...
    clear: Any = ...
    fill: Any = ...
    data_block: Any = ...
    set: Any = ...
