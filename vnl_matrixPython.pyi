from typing import Any

class _SwigNonDynamicMeta(type):
    __setattr__: Any = ...

class vnl_matrixCF:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    rows: Any = ...
    cols: Any = ...
    columns: Any = ...
    put: Any = ...
    get: Any = ...
    __call__: Any = ...
    fill: Any = ...
    fill_diagonal: Any = ...
    set_diagonal: Any = ...
    copy_in: Any = ...
    set: Any = ...
    copy_out: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    __imul__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    transpose: Any = ...
    conjugate_transpose: Any = ...
    update: Any = ...
    set_column: Any = ...
    set_columns: Any = ...
    set_row: Any = ...
    extract: Any = ...
    get_row: Any = ...
    get_column: Any = ...
    get_rows: Any = ...
    get_columns: Any = ...
    get_n_rows: Any = ...
    get_n_columns: Any = ...
    get_diagonal: Any = ...
    flatten_row_major: Any = ...
    flatten_column_major: Any = ...
    set_identity: Any = ...
    inplace_transpose: Any = ...
    flipud: Any = ...
    fliplr: Any = ...
    normalize_rows: Any = ...
    normalize_columns: Any = ...
    scale_row: Any = ...
    scale_column: Any = ...
    swap: Any = ...
    array_one_norm: Any = ...
    array_two_norm: Any = ...
    array_inf_norm: Any = ...
    absolute_value_sum: Any = ...
    absolute_value_max: Any = ...
    operator_one_norm: Any = ...
    operator_inf_norm: Any = ...
    frobenius_norm: Any = ...
    fro_norm: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    empty: Any = ...
    is_identity: Any = ...
    is_zero: Any = ...
    is_equal: Any = ...
    is_finite: Any = ...
    has_nans: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    read: Any = ...
    read_ascii: Any = ...
    data_block: Any = ...
    data_array: Any = ...
    begin: Any = ...
    end: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    clear: Any = ...
    set_size: Any = ...

vnl_matrixCF_read: Any

class vnl_matrixD:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    rows: Any = ...
    cols: Any = ...
    columns: Any = ...
    put: Any = ...
    get: Any = ...
    __call__: Any = ...
    fill: Any = ...
    fill_diagonal: Any = ...
    set_diagonal: Any = ...
    copy_in: Any = ...
    set: Any = ...
    copy_out: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    __imul__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    transpose: Any = ...
    conjugate_transpose: Any = ...
    update: Any = ...
    set_column: Any = ...
    set_columns: Any = ...
    set_row: Any = ...
    extract: Any = ...
    get_row: Any = ...
    get_column: Any = ...
    get_rows: Any = ...
    get_columns: Any = ...
    get_n_rows: Any = ...
    get_n_columns: Any = ...
    get_diagonal: Any = ...
    flatten_row_major: Any = ...
    flatten_column_major: Any = ...
    set_identity: Any = ...
    inplace_transpose: Any = ...
    flipud: Any = ...
    fliplr: Any = ...
    normalize_rows: Any = ...
    normalize_columns: Any = ...
    scale_row: Any = ...
    scale_column: Any = ...
    swap: Any = ...
    array_one_norm: Any = ...
    array_two_norm: Any = ...
    array_inf_norm: Any = ...
    absolute_value_sum: Any = ...
    absolute_value_max: Any = ...
    operator_one_norm: Any = ...
    operator_inf_norm: Any = ...
    frobenius_norm: Any = ...
    fro_norm: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    empty: Any = ...
    is_identity: Any = ...
    is_zero: Any = ...
    is_equal: Any = ...
    is_finite: Any = ...
    has_nans: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    read: Any = ...
    read_ascii: Any = ...
    data_block: Any = ...
    data_array: Any = ...
    begin: Any = ...
    end: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    clear: Any = ...
    set_size: Any = ...

vnl_matrixD_read: Any

class vnl_matrixF:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    rows: Any = ...
    cols: Any = ...
    columns: Any = ...
    put: Any = ...
    get: Any = ...
    __call__: Any = ...
    fill: Any = ...
    fill_diagonal: Any = ...
    set_diagonal: Any = ...
    copy_in: Any = ...
    set: Any = ...
    copy_out: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    __imul__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    transpose: Any = ...
    conjugate_transpose: Any = ...
    update: Any = ...
    set_column: Any = ...
    set_columns: Any = ...
    set_row: Any = ...
    extract: Any = ...
    get_row: Any = ...
    get_column: Any = ...
    get_rows: Any = ...
    get_columns: Any = ...
    get_n_rows: Any = ...
    get_n_columns: Any = ...
    get_diagonal: Any = ...
    flatten_row_major: Any = ...
    flatten_column_major: Any = ...
    set_identity: Any = ...
    inplace_transpose: Any = ...
    flipud: Any = ...
    fliplr: Any = ...
    normalize_rows: Any = ...
    normalize_columns: Any = ...
    scale_row: Any = ...
    scale_column: Any = ...
    swap: Any = ...
    array_one_norm: Any = ...
    array_two_norm: Any = ...
    array_inf_norm: Any = ...
    absolute_value_sum: Any = ...
    absolute_value_max: Any = ...
    operator_one_norm: Any = ...
    operator_inf_norm: Any = ...
    frobenius_norm: Any = ...
    fro_norm: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    empty: Any = ...
    is_identity: Any = ...
    is_zero: Any = ...
    is_equal: Any = ...
    is_finite: Any = ...
    has_nans: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    read: Any = ...
    read_ascii: Any = ...
    data_block: Any = ...
    data_array: Any = ...
    begin: Any = ...
    end: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    clear: Any = ...
    set_size: Any = ...

vnl_matrixF_read: Any

class vnl_matrixLD:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    rows: Any = ...
    cols: Any = ...
    columns: Any = ...
    put: Any = ...
    get: Any = ...
    __call__: Any = ...
    fill: Any = ...
    fill_diagonal: Any = ...
    set_diagonal: Any = ...
    copy_in: Any = ...
    set: Any = ...
    copy_out: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    __imul__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    transpose: Any = ...
    conjugate_transpose: Any = ...
    update: Any = ...
    set_column: Any = ...
    set_columns: Any = ...
    set_row: Any = ...
    extract: Any = ...
    get_row: Any = ...
    get_column: Any = ...
    get_rows: Any = ...
    get_columns: Any = ...
    get_n_rows: Any = ...
    get_n_columns: Any = ...
    get_diagonal: Any = ...
    flatten_row_major: Any = ...
    flatten_column_major: Any = ...
    set_identity: Any = ...
    inplace_transpose: Any = ...
    flipud: Any = ...
    fliplr: Any = ...
    normalize_rows: Any = ...
    normalize_columns: Any = ...
    scale_row: Any = ...
    scale_column: Any = ...
    swap: Any = ...
    array_one_norm: Any = ...
    array_two_norm: Any = ...
    array_inf_norm: Any = ...
    absolute_value_sum: Any = ...
    absolute_value_max: Any = ...
    operator_one_norm: Any = ...
    operator_inf_norm: Any = ...
    frobenius_norm: Any = ...
    fro_norm: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    empty: Any = ...
    is_identity: Any = ...
    is_zero: Any = ...
    is_equal: Any = ...
    is_finite: Any = ...
    has_nans: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    read: Any = ...
    read_ascii: Any = ...
    data_block: Any = ...
    data_array: Any = ...
    begin: Any = ...
    end: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    clear: Any = ...
    set_size: Any = ...

vnl_matrixLD_read: Any

class vnl_matrixSC:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    rows: Any = ...
    cols: Any = ...
    columns: Any = ...
    put: Any = ...
    get: Any = ...
    __call__: Any = ...
    fill: Any = ...
    fill_diagonal: Any = ...
    set_diagonal: Any = ...
    copy_in: Any = ...
    set: Any = ...
    copy_out: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    __imul__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    transpose: Any = ...
    conjugate_transpose: Any = ...
    update: Any = ...
    set_column: Any = ...
    set_columns: Any = ...
    set_row: Any = ...
    extract: Any = ...
    get_row: Any = ...
    get_column: Any = ...
    get_rows: Any = ...
    get_columns: Any = ...
    get_n_rows: Any = ...
    get_n_columns: Any = ...
    get_diagonal: Any = ...
    flatten_row_major: Any = ...
    flatten_column_major: Any = ...
    set_identity: Any = ...
    inplace_transpose: Any = ...
    flipud: Any = ...
    fliplr: Any = ...
    normalize_rows: Any = ...
    normalize_columns: Any = ...
    scale_row: Any = ...
    scale_column: Any = ...
    swap: Any = ...
    array_one_norm: Any = ...
    array_two_norm: Any = ...
    array_inf_norm: Any = ...
    absolute_value_sum: Any = ...
    absolute_value_max: Any = ...
    operator_one_norm: Any = ...
    operator_inf_norm: Any = ...
    frobenius_norm: Any = ...
    fro_norm: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    empty: Any = ...
    is_identity: Any = ...
    is_zero: Any = ...
    is_equal: Any = ...
    is_finite: Any = ...
    has_nans: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    read: Any = ...
    read_ascii: Any = ...
    data_block: Any = ...
    data_array: Any = ...
    begin: Any = ...
    end: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    clear: Any = ...
    set_size: Any = ...

vnl_matrixSC_read: Any

class vnl_matrixSI:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    rows: Any = ...
    cols: Any = ...
    columns: Any = ...
    put: Any = ...
    get: Any = ...
    __call__: Any = ...
    fill: Any = ...
    fill_diagonal: Any = ...
    set_diagonal: Any = ...
    copy_in: Any = ...
    set: Any = ...
    copy_out: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    __imul__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    transpose: Any = ...
    conjugate_transpose: Any = ...
    update: Any = ...
    set_column: Any = ...
    set_columns: Any = ...
    set_row: Any = ...
    extract: Any = ...
    get_row: Any = ...
    get_column: Any = ...
    get_rows: Any = ...
    get_columns: Any = ...
    get_n_rows: Any = ...
    get_n_columns: Any = ...
    get_diagonal: Any = ...
    flatten_row_major: Any = ...
    flatten_column_major: Any = ...
    set_identity: Any = ...
    inplace_transpose: Any = ...
    flipud: Any = ...
    fliplr: Any = ...
    normalize_rows: Any = ...
    normalize_columns: Any = ...
    scale_row: Any = ...
    scale_column: Any = ...
    swap: Any = ...
    array_one_norm: Any = ...
    array_two_norm: Any = ...
    array_inf_norm: Any = ...
    absolute_value_sum: Any = ...
    absolute_value_max: Any = ...
    operator_one_norm: Any = ...
    operator_inf_norm: Any = ...
    frobenius_norm: Any = ...
    fro_norm: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    empty: Any = ...
    is_identity: Any = ...
    is_zero: Any = ...
    is_equal: Any = ...
    is_finite: Any = ...
    has_nans: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    read: Any = ...
    read_ascii: Any = ...
    data_block: Any = ...
    data_array: Any = ...
    begin: Any = ...
    end: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    clear: Any = ...
    set_size: Any = ...

vnl_matrixSI_read: Any

class vnl_matrixSL:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    rows: Any = ...
    cols: Any = ...
    columns: Any = ...
    put: Any = ...
    get: Any = ...
    __call__: Any = ...
    fill: Any = ...
    fill_diagonal: Any = ...
    set_diagonal: Any = ...
    copy_in: Any = ...
    set: Any = ...
    copy_out: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    __imul__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    transpose: Any = ...
    conjugate_transpose: Any = ...
    update: Any = ...
    set_column: Any = ...
    set_columns: Any = ...
    set_row: Any = ...
    extract: Any = ...
    get_row: Any = ...
    get_column: Any = ...
    get_rows: Any = ...
    get_columns: Any = ...
    get_n_rows: Any = ...
    get_n_columns: Any = ...
    get_diagonal: Any = ...
    flatten_row_major: Any = ...
    flatten_column_major: Any = ...
    set_identity: Any = ...
    inplace_transpose: Any = ...
    flipud: Any = ...
    fliplr: Any = ...
    normalize_rows: Any = ...
    normalize_columns: Any = ...
    scale_row: Any = ...
    scale_column: Any = ...
    swap: Any = ...
    array_one_norm: Any = ...
    array_two_norm: Any = ...
    array_inf_norm: Any = ...
    absolute_value_sum: Any = ...
    absolute_value_max: Any = ...
    operator_one_norm: Any = ...
    operator_inf_norm: Any = ...
    frobenius_norm: Any = ...
    fro_norm: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    empty: Any = ...
    is_identity: Any = ...
    is_zero: Any = ...
    is_equal: Any = ...
    is_finite: Any = ...
    has_nans: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    read: Any = ...
    read_ascii: Any = ...
    data_block: Any = ...
    data_array: Any = ...
    begin: Any = ...
    end: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    clear: Any = ...
    set_size: Any = ...

vnl_matrixSL_read: Any

class vnl_matrixSLL:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    rows: Any = ...
    cols: Any = ...
    columns: Any = ...
    put: Any = ...
    get: Any = ...
    __call__: Any = ...
    fill: Any = ...
    fill_diagonal: Any = ...
    set_diagonal: Any = ...
    copy_in: Any = ...
    set: Any = ...
    copy_out: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    __imul__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    transpose: Any = ...
    conjugate_transpose: Any = ...
    update: Any = ...
    set_column: Any = ...
    set_columns: Any = ...
    set_row: Any = ...
    extract: Any = ...
    get_row: Any = ...
    get_column: Any = ...
    get_rows: Any = ...
    get_columns: Any = ...
    get_n_rows: Any = ...
    get_n_columns: Any = ...
    get_diagonal: Any = ...
    flatten_row_major: Any = ...
    flatten_column_major: Any = ...
    set_identity: Any = ...
    inplace_transpose: Any = ...
    flipud: Any = ...
    fliplr: Any = ...
    normalize_rows: Any = ...
    normalize_columns: Any = ...
    scale_row: Any = ...
    scale_column: Any = ...
    swap: Any = ...
    array_one_norm: Any = ...
    array_two_norm: Any = ...
    array_inf_norm: Any = ...
    absolute_value_sum: Any = ...
    absolute_value_max: Any = ...
    operator_one_norm: Any = ...
    operator_inf_norm: Any = ...
    frobenius_norm: Any = ...
    fro_norm: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    empty: Any = ...
    is_identity: Any = ...
    is_zero: Any = ...
    is_equal: Any = ...
    is_finite: Any = ...
    has_nans: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    read: Any = ...
    read_ascii: Any = ...
    data_block: Any = ...
    data_array: Any = ...
    begin: Any = ...
    end: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    clear: Any = ...
    set_size: Any = ...

vnl_matrixSLL_read: Any

class vnl_matrixSS:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    rows: Any = ...
    cols: Any = ...
    columns: Any = ...
    put: Any = ...
    get: Any = ...
    __call__: Any = ...
    fill: Any = ...
    fill_diagonal: Any = ...
    set_diagonal: Any = ...
    copy_in: Any = ...
    set: Any = ...
    copy_out: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    __imul__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    transpose: Any = ...
    conjugate_transpose: Any = ...
    update: Any = ...
    set_column: Any = ...
    set_columns: Any = ...
    set_row: Any = ...
    extract: Any = ...
    get_row: Any = ...
    get_column: Any = ...
    get_rows: Any = ...
    get_columns: Any = ...
    get_n_rows: Any = ...
    get_n_columns: Any = ...
    get_diagonal: Any = ...
    flatten_row_major: Any = ...
    flatten_column_major: Any = ...
    set_identity: Any = ...
    inplace_transpose: Any = ...
    flipud: Any = ...
    fliplr: Any = ...
    normalize_rows: Any = ...
    normalize_columns: Any = ...
    scale_row: Any = ...
    scale_column: Any = ...
    swap: Any = ...
    array_one_norm: Any = ...
    array_two_norm: Any = ...
    array_inf_norm: Any = ...
    absolute_value_sum: Any = ...
    absolute_value_max: Any = ...
    operator_one_norm: Any = ...
    operator_inf_norm: Any = ...
    frobenius_norm: Any = ...
    fro_norm: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    empty: Any = ...
    is_identity: Any = ...
    is_zero: Any = ...
    is_equal: Any = ...
    is_finite: Any = ...
    has_nans: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    read: Any = ...
    read_ascii: Any = ...
    data_block: Any = ...
    data_array: Any = ...
    begin: Any = ...
    end: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    clear: Any = ...
    set_size: Any = ...

vnl_matrixSS_read: Any

class vnl_matrixUC:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    rows: Any = ...
    cols: Any = ...
    columns: Any = ...
    put: Any = ...
    get: Any = ...
    __call__: Any = ...
    fill: Any = ...
    fill_diagonal: Any = ...
    set_diagonal: Any = ...
    copy_in: Any = ...
    set: Any = ...
    copy_out: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    __imul__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    transpose: Any = ...
    conjugate_transpose: Any = ...
    update: Any = ...
    set_column: Any = ...
    set_columns: Any = ...
    set_row: Any = ...
    extract: Any = ...
    get_row: Any = ...
    get_column: Any = ...
    get_rows: Any = ...
    get_columns: Any = ...
    get_n_rows: Any = ...
    get_n_columns: Any = ...
    get_diagonal: Any = ...
    flatten_row_major: Any = ...
    flatten_column_major: Any = ...
    set_identity: Any = ...
    inplace_transpose: Any = ...
    flipud: Any = ...
    fliplr: Any = ...
    normalize_rows: Any = ...
    normalize_columns: Any = ...
    scale_row: Any = ...
    scale_column: Any = ...
    swap: Any = ...
    array_one_norm: Any = ...
    array_two_norm: Any = ...
    array_inf_norm: Any = ...
    absolute_value_sum: Any = ...
    absolute_value_max: Any = ...
    operator_one_norm: Any = ...
    operator_inf_norm: Any = ...
    frobenius_norm: Any = ...
    fro_norm: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    empty: Any = ...
    is_identity: Any = ...
    is_zero: Any = ...
    is_equal: Any = ...
    is_finite: Any = ...
    has_nans: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    read: Any = ...
    read_ascii: Any = ...
    data_block: Any = ...
    data_array: Any = ...
    begin: Any = ...
    end: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    clear: Any = ...
    set_size: Any = ...

vnl_matrixUC_read: Any

class vnl_matrixUI:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    rows: Any = ...
    cols: Any = ...
    columns: Any = ...
    put: Any = ...
    get: Any = ...
    __call__: Any = ...
    fill: Any = ...
    fill_diagonal: Any = ...
    set_diagonal: Any = ...
    copy_in: Any = ...
    set: Any = ...
    copy_out: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    __imul__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    transpose: Any = ...
    conjugate_transpose: Any = ...
    update: Any = ...
    set_column: Any = ...
    set_columns: Any = ...
    set_row: Any = ...
    extract: Any = ...
    get_row: Any = ...
    get_column: Any = ...
    get_rows: Any = ...
    get_columns: Any = ...
    get_n_rows: Any = ...
    get_n_columns: Any = ...
    get_diagonal: Any = ...
    flatten_row_major: Any = ...
    flatten_column_major: Any = ...
    set_identity: Any = ...
    inplace_transpose: Any = ...
    flipud: Any = ...
    fliplr: Any = ...
    normalize_rows: Any = ...
    normalize_columns: Any = ...
    scale_row: Any = ...
    scale_column: Any = ...
    swap: Any = ...
    array_one_norm: Any = ...
    array_two_norm: Any = ...
    array_inf_norm: Any = ...
    absolute_value_sum: Any = ...
    absolute_value_max: Any = ...
    operator_one_norm: Any = ...
    operator_inf_norm: Any = ...
    frobenius_norm: Any = ...
    fro_norm: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    empty: Any = ...
    is_identity: Any = ...
    is_zero: Any = ...
    is_equal: Any = ...
    is_finite: Any = ...
    has_nans: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    read: Any = ...
    read_ascii: Any = ...
    data_block: Any = ...
    data_array: Any = ...
    begin: Any = ...
    end: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    clear: Any = ...
    set_size: Any = ...

vnl_matrixUI_read: Any

class vnl_matrixUL:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    rows: Any = ...
    cols: Any = ...
    columns: Any = ...
    put: Any = ...
    get: Any = ...
    __call__: Any = ...
    fill: Any = ...
    fill_diagonal: Any = ...
    set_diagonal: Any = ...
    copy_in: Any = ...
    set: Any = ...
    copy_out: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    __imul__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    transpose: Any = ...
    conjugate_transpose: Any = ...
    update: Any = ...
    set_column: Any = ...
    set_columns: Any = ...
    set_row: Any = ...
    extract: Any = ...
    get_row: Any = ...
    get_column: Any = ...
    get_rows: Any = ...
    get_columns: Any = ...
    get_n_rows: Any = ...
    get_n_columns: Any = ...
    get_diagonal: Any = ...
    flatten_row_major: Any = ...
    flatten_column_major: Any = ...
    set_identity: Any = ...
    inplace_transpose: Any = ...
    flipud: Any = ...
    fliplr: Any = ...
    normalize_rows: Any = ...
    normalize_columns: Any = ...
    scale_row: Any = ...
    scale_column: Any = ...
    swap: Any = ...
    array_one_norm: Any = ...
    array_two_norm: Any = ...
    array_inf_norm: Any = ...
    absolute_value_sum: Any = ...
    absolute_value_max: Any = ...
    operator_one_norm: Any = ...
    operator_inf_norm: Any = ...
    frobenius_norm: Any = ...
    fro_norm: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    empty: Any = ...
    is_identity: Any = ...
    is_zero: Any = ...
    is_equal: Any = ...
    is_finite: Any = ...
    has_nans: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    read: Any = ...
    read_ascii: Any = ...
    data_block: Any = ...
    data_array: Any = ...
    begin: Any = ...
    end: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    clear: Any = ...
    set_size: Any = ...

vnl_matrixUL_read: Any

class vnl_matrixULL:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    rows: Any = ...
    cols: Any = ...
    columns: Any = ...
    put: Any = ...
    get: Any = ...
    __call__: Any = ...
    fill: Any = ...
    fill_diagonal: Any = ...
    set_diagonal: Any = ...
    copy_in: Any = ...
    set: Any = ...
    copy_out: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    __imul__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    transpose: Any = ...
    conjugate_transpose: Any = ...
    update: Any = ...
    set_column: Any = ...
    set_columns: Any = ...
    set_row: Any = ...
    extract: Any = ...
    get_row: Any = ...
    get_column: Any = ...
    get_rows: Any = ...
    get_columns: Any = ...
    get_n_rows: Any = ...
    get_n_columns: Any = ...
    get_diagonal: Any = ...
    flatten_row_major: Any = ...
    flatten_column_major: Any = ...
    set_identity: Any = ...
    inplace_transpose: Any = ...
    flipud: Any = ...
    fliplr: Any = ...
    normalize_rows: Any = ...
    normalize_columns: Any = ...
    scale_row: Any = ...
    scale_column: Any = ...
    swap: Any = ...
    array_one_norm: Any = ...
    array_two_norm: Any = ...
    array_inf_norm: Any = ...
    absolute_value_sum: Any = ...
    absolute_value_max: Any = ...
    operator_one_norm: Any = ...
    operator_inf_norm: Any = ...
    frobenius_norm: Any = ...
    fro_norm: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    empty: Any = ...
    is_identity: Any = ...
    is_zero: Any = ...
    is_equal: Any = ...
    is_finite: Any = ...
    has_nans: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    read: Any = ...
    read_ascii: Any = ...
    data_block: Any = ...
    data_array: Any = ...
    begin: Any = ...
    end: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    clear: Any = ...
    set_size: Any = ...

vnl_matrixULL_read: Any

class vnl_matrixUS:
    thisown: Any = ...
    def __init__(self, *args: Any) -> None: ...
    __swig_destroy__: Any = ...
    size: Any = ...
    rows: Any = ...
    cols: Any = ...
    columns: Any = ...
    put: Any = ...
    get: Any = ...
    __call__: Any = ...
    fill: Any = ...
    fill_diagonal: Any = ...
    set_diagonal: Any = ...
    copy_in: Any = ...
    set: Any = ...
    copy_out: Any = ...
    def __itruediv__(self, *args: Any): ...
    __idiv__: Any = ...
    __iadd__: Any = ...
    __isub__: Any = ...
    __imul__: Any = ...
    __neg__: Any = ...
    def __truediv__(self, *args: Any): ...
    __div__: Any = ...
    __add__: Any = ...
    __sub__: Any = ...
    __mul__: Any = ...
    transpose: Any = ...
    conjugate_transpose: Any = ...
    update: Any = ...
    set_column: Any = ...
    set_columns: Any = ...
    set_row: Any = ...
    extract: Any = ...
    get_row: Any = ...
    get_column: Any = ...
    get_rows: Any = ...
    get_columns: Any = ...
    get_n_rows: Any = ...
    get_n_columns: Any = ...
    get_diagonal: Any = ...
    flatten_row_major: Any = ...
    flatten_column_major: Any = ...
    set_identity: Any = ...
    inplace_transpose: Any = ...
    flipud: Any = ...
    fliplr: Any = ...
    normalize_rows: Any = ...
    normalize_columns: Any = ...
    scale_row: Any = ...
    scale_column: Any = ...
    swap: Any = ...
    array_one_norm: Any = ...
    array_two_norm: Any = ...
    array_inf_norm: Any = ...
    absolute_value_sum: Any = ...
    absolute_value_max: Any = ...
    operator_one_norm: Any = ...
    operator_inf_norm: Any = ...
    frobenius_norm: Any = ...
    fro_norm: Any = ...
    rms: Any = ...
    min_value: Any = ...
    max_value: Any = ...
    arg_min: Any = ...
    arg_max: Any = ...
    mean: Any = ...
    empty: Any = ...
    is_identity: Any = ...
    is_zero: Any = ...
    is_equal: Any = ...
    is_finite: Any = ...
    has_nans: Any = ...
    assert_size: Any = ...
    assert_finite: Any = ...
    read: Any = ...
    read_ascii: Any = ...
    data_block: Any = ...
    data_array: Any = ...
    begin: Any = ...
    end: Any = ...
    operator_eq: Any = ...
    __eq__: Any = ...
    __ne__: Any = ...
    clear: Any = ...
    set_size: Any = ...

vnl_matrixUS_read: Any
