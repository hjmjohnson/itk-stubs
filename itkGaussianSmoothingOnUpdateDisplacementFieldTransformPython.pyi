import itk.itkRGBPixelPython
from typing import Any

class _SwigNonDynamicMeta(type):
    __setattr__: Any = ...

def itkGaussianSmoothingOnUpdateDisplacementFieldTransformD2_New(): ...

class itkGaussianSmoothingOnUpdateDisplacementFieldTransformD2(itk.itkDisplacementFieldTransformPython.itkDisplacementFieldTransformD2):
    thisown: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    __New_orig__: Any = ...
    Clone: Any = ...
    SetGaussianSmoothingVarianceForTheUpdateField: Any = ...
    GetGaussianSmoothingVarianceForTheUpdateField: Any = ...
    SetGaussianSmoothingVarianceForTheTotalField: Any = ...
    GetGaussianSmoothingVarianceForTheTotalField: Any = ...
    UpdateTransformParameters: Any = ...
    GaussianSmoothDisplacementField: Any = ...
    __swig_destroy__: Any = ...
    cast: Any = ...
    def New(*args: Any, **kargs: Any): ...
    New: Any = ...

itkGaussianSmoothingOnUpdateDisplacementFieldTransformD2___New_orig__: Any
itkGaussianSmoothingOnUpdateDisplacementFieldTransformD2_cast: Any

def itkGaussianSmoothingOnUpdateDisplacementFieldTransformD3_New(): ...

class itkGaussianSmoothingOnUpdateDisplacementFieldTransformD3(itk.itkDisplacementFieldTransformPython.itkDisplacementFieldTransformD3):
    thisown: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    __New_orig__: Any = ...
    Clone: Any = ...
    SetGaussianSmoothingVarianceForTheUpdateField: Any = ...
    GetGaussianSmoothingVarianceForTheUpdateField: Any = ...
    SetGaussianSmoothingVarianceForTheTotalField: Any = ...
    GetGaussianSmoothingVarianceForTheTotalField: Any = ...
    UpdateTransformParameters: Any = ...
    GaussianSmoothDisplacementField: Any = ...
    __swig_destroy__: Any = ...
    cast: Any = ...
    def New(*args: Any, **kargs: Any): ...
    New: Any = ...

itkGaussianSmoothingOnUpdateDisplacementFieldTransformD3___New_orig__: Any
itkGaussianSmoothingOnUpdateDisplacementFieldTransformD3_cast: Any
